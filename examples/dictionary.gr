import std::dict;
import std::gc;

func factorial(num):
  if num < 2:
    return num;
  end
  return num * factorial(num - 1);
end

func main():
  std::gc::set_enabled(false);

  final people = ["Ryan", "Walt", "Jesse"];

  for person, index in people:
    println("Person #" + index + " is " + person);
  end

  println("HERE");

  final dict = {
    "Walter": "White",
    "Person List": people,
    factorial(10): factorial(20),
  };

  println("HERE");

  for key, value in dict:
    println("The key is " + key + " and the value is " + value);
  end

  assert(instanceof(dict, Dict) and typename(dict) == "Dict");
  final as_list = List(dict);
  for item in as_list:
    println(typename(item));
    println(item);
  end

  println();

  final testing_rehash = {};

  testing_rehash.insert("Ryan", 0);
  testing_rehash.insert("Ryan1", 1);
  testing_rehash.insert("Ryan2", 2);
  testing_rehash.insert("Ryan3", 3);
  testing_rehash.insert("Ryan4", 4);
  testing_rehash.insert("Ryan5", 5);
  testing_rehash.insert("Ryan6", 6);
  testing_rehash.insert("Ryan7", 7);
  testing_rehash.insert("Ryan8", 8);
  testing_rehash.insert("Ryan9", 9);
  testing_rehash.insert("Ryan10", 10);

  println(testing_rehash);
end
